bool check(Node* t, Node* s)
{
    if(!t && !s)
        return true;
    else if(!t || !s)
        return false;
    if(t->data == s->data)
    {
        return check(t->left,s->left) && check(t->right,s->right);
    }
    else
        return false;
}
bool isSubTree(Node* t, Node* s) {
    
    if( (!s && !t) || !s)
    {
        return true;
    }
    else if(!t)
     return false;
    else if(t->data == s->data)
    {
        if(check(t,s))
        {
            return true;
        }
    }
           
          return isSubTree(t->left,s) || isSubTree(t->right,s) ;
         
}
