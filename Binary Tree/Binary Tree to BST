void inorder(Node* root, vector<Node*>&ans)
{
    if(!root)
        return ;
    else
    {
        inorder(root->left,ans);
        ans.push_back(root);
        inorder(root->right,ans);
        return;
    }
}

Node *binaryTreeToBST (Node *root)
{
    vector<int>a;
    vector<Node*>ans;
    inorder(root,ans);
    for(int i=0;i<ans.size();i++)
    {
        a.push_back(ans[i]->data);
    }
    sort(a.begin(),a.end());
    for(int i=0;i<a.size();i++)
    {
        int val = a[i];
        for(int j=i;j<ans.size();j++)
        {
            if(ans[j]->data==val)
            {
                swap(ans[i]->data,ans[j]->data);
                break;
            }
        }
    }
    return root;
}
